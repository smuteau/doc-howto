= Migrer de nginx à Apache

== Pourquoi ?

- Apache va devenir petit à petit la norme avec Jeedom
- Permet d'avoir les dernieres mise à jour de securité au niveau de l'accès aux fichiers (grace au .htaccess) lors des mises à jour de jeedom
- Corrige certain soucis d'accès et de stabilité (notamment pour ceux qui ont beaucoup de caméra)

== Pré-requis

- Savoir se connecter en SSH sur la box (vous trouverez les identifiants sur la documentation d'installation)
- Etre connecté à internet

[IMPORTANT]
En cas de soucis l'équipe Jeedom ne pourra etre tenu responsable et pourra refuser toute demande de support. La manipulation est à vos risques et périls

[IMPORTANT]
Attention certain plugin non officiel ne sont pas compatible Apache, renseignez vous bien avant.

== Comment faire

=== Désactivation des services jeedom et de nginx

Dans jeedom il faut aller sur chaque plugin ayant un démon, puis désactiver la gestion automatique du démon et couper celui-ci. 
Il faut ensuite dans le moteur de tâche désactiver toute les taches (il y un bouton de désactivation général) et dans les scénarios désactiver tout les scénarios (il y un bouton de désactivation général)

----
systemctl stop cron 
systemctl stop nginx
systemctl stop mysql
----

=== Installation et configuration d'Apache

----
mkdir -p /var/www/html/log
apt-get -y install ntp ca-certificates unzip curl sudo
apt-get -y install apache2 php5 mysql-client mysql-server libapache2-mod-php5
apt-get -y install php5-cli php5-common php5-curl php5-fpm php5-json php5-mysql php5-gd
wget https://raw.githubusercontent.com/jeedom/core/stable/install/apache_security -O /etc/apache2/conf-available/security.conf
rm /etc/apache2/conf-enabled/security.conf
ln -s /etc/apache2/conf-available/security.conf /etc/apache2/conf-enabled/
rm /etc/apache2/conf-available/other-vhosts-access-log.conf
rm /etc/apache2/conf-enabled/other-vhosts-access-log.conf
systemctl restart apache2
rm /var/www/html/index.html
----

=== Copie de Jeedom

----
cp -R /usr/share/nginx/www/jeedom/* /var/www/html/
cp -R /usr/share/nginx/www/jeedom/.* /var/www/html/
rm /var/www/html/log/nginx.error
chmod 775 -R /var/www/html
chown www-data:www-data -R /var/www/html
----

=== Test d'accès

----
systemctl start mysql
----

Vous devriez maintenant pouvoir accèder à jeedom depuis la meme URL qu'avant. Si c'est bon vous pouvez continuer sinon il ne faut surtout pas faire la suite

=== Nettoyage et suppression de nginx

----
apt-get remove nginx*
rm -rf cp -R /usr/share/nginx
apt-get autoremove
systemctl disable nginx
----

=== Redémarrage des services

----
systemctl enable apache2
systemctl start cron
----

Ensuite connectez vous à votre jeedom et réactiver le moteur de tache, les scénarios. Vous pouvez aussi relancer les démons



